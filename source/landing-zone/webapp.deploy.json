{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "uniqueIdentifier": {
      "type": "string",
      "metadata": {
        "description": "Unique identifier for global name scope"
      }
    },
    "managementSubscriptionId": {
      "type": "string",
      "metadata": {
        "description": "Management subscription ID"
      }
    },
    "tagValues": {
      "type": "object",
      "defaultValue": {
        "WorkloadName": "Web Application",
        "DataClassification": "Public",
        "Criticality": "Medium",
        "BusinessUnit": "Marketing",
        "CostCenter": "7629",
        "Owner": "john.doe@robino.io"
      },
      "metadata": {
        "description": "Resource tags"
      }
    },
    "sqlAdminUserName": {
      "type": "string",
      "defaultValue": "azureadmin",
      "metadata": {
        "description": "Admin user name for the Azure SQL instance"
      }
    },
    "sqlAdminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Admin password for the Azure SQL instance"
      }
    },
    "keyVault": {
      "type": "object",
      "defaultValue": {
        "skuName": "standard",
        "skuFamily": "A"
      },
      "metadata": {
        "description": "Deployment settings for Azure Key Vault instances"
      }
    },
    "appService": {
      "type": "object",
      "defaultValue": {
        "skuName": "S1",
        "skuCapacity": 1,
        "autoScaleCpuMax": 80.0,
        "autoScaleCpuMin": 60.0,
        "autoScaleMin": 1,
        "autoscaleMax": 2,
        "autoscaleDefault": 1
      },
      "metadata": {
        "description": "Deployment settings for Azure App Service instance"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for the resources"
      }
    }
  },
  "variables": {
    "logAnalyticsName": "[concat(parameters('uniqueIdentifier'), '-mgmt-log01')]",
    "keyVaultName": "[concat(parameters('uniqueIdentifier'), '-webapp-kv01')]",
    "sqlServerName": "[concat(parameters('uniqueIdentifier'), '-webapp-sql01')]",
    "sqlDatabaseName": "[concat(parameters('uniqueIdentifier'), '-webapp-sqldb01')]",
    "appServicePlanName": "[concat(parameters('uniqueIdentifier'), '-webapp-plan01')]",
    "appServiceAppName": "[concat(parameters('uniqueIdentifier'), '-webapp-app01')]"
  },
  "functions": [],
  "resources": [
    {
      "comments": "Azure SQL Server resource",
      "type": "Microsoft.Sql/servers",
      "apiVersion": "2020-02-02-preview",
      "name": "[variables('sqlServerName')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tagValues')]",
      "properties": {
        "administratorLogin": "[parameters('sqlAdminUserName')]",
        "administratorLoginPassword": "[parameters('sqlAdminPassword')]",
        "version": "12.0"
      },
      "resources": [
        {
          "comments": "Master database",
          "type": "databases",
          "apiVersion": "2020-08-01-preview",
          "name": "master",
          "location": "[parameters('location')]",
          "dependsOn": [
            "[resourceId('Microsoft.Sql/servers', variables('sqlServerName'))]"
          ],
          "resources": [
            {
              "comments": "Master database security audit configuration",
              "type": "providers/diagnosticSettings",
              "apiVersion": "2017-05-01-preview",
              "name": "[concat('Microsoft.Insights/default', ' ', variables('logAnalyticsName'))]",
              "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', variables('sqlServerName'), 'master')]"
              ],
              "properties": {
                "workspaceId": "[resourceId(parameters('managementSubscriptionId'),'mgmt-rg','Microsoft.OperationalInsights/workspaces', variables('logAnalyticsName'))]",
                "logs": [
                  {
                    "category": "SQLSecurityAuditEvents",
                    "enabled": true
                  }
                ]
              }
            }
          ]
        },
        {
          "comments": "Azure SQL Auditing configuration",
          "type": "auditingSettings",
          "apiVersion": "2020-02-02-preview",
          "name": "DefaultAuditingSettings",
          "dependsOn": [
            "[resourceId('Microsoft.Sql/servers', variables('sqlServerName'))]"
          ],
          "properties": {
            "State": "Enabled",
            "isAzureMonitorTargetEnabled": true
          }
        },
        {
          "comments": "Application database",
          "type": "databases",
          "apiVersion": "2020-08-01-preview",
          "name": "[variables('sqlDatabaseName')]",
          "location": "[parameters('location')]",
          "tags": "[parameters('tagValues')]",
          "dependsOn": [
            "[resourceId('Microsoft.Sql/servers', variables('sqlServerName'))]"
          ],
          "resources": [
            {
              "comments": "Application database diagnostic settings configuration",
              "type": "providers/diagnosticSettings",
              "apiVersion": "2017-05-01-preview",
              "name": "[concat('Microsoft.Insights/default', ' ', variables('logAnalyticsName'))]",
              "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', variables('sqlServerName'), variables('sqlDatabaseName'))]",
                "[resourceId('Microsoft.Sql/servers/databases', variables('sqlServerName'), 'master')]"
              ],
              "properties": {
                "workspaceId": "[resourceId(parameters('managementSubscriptionId'),'mgmt-rg','Microsoft.OperationalInsights/workspaces', variables('logAnalyticsName'))]",
                "logs": [
                  {
                    "category": "SQLInsights",
                    "enabled": true
                  },
                  {
                    "category": "AutomaticTuning",
                    "enabled": true
                  },
                  {
                    "category": "QueryStoreRuntimeStatistics",
                    "enabled": true
                  },
                  {
                    "category": "QueryStoreWaitStatistics",
                    "enabled": true
                  },
                  {
                    "category": "Errors",
                    "enabled": true
                  },
                  {
                    "category": "DatabaseWaitStatistics",
                    "enabled": true
                  },
                  {
                    "category": "Timeouts",
                    "enabled": true
                  },
                  {
                    "category": "Blocks",
                    "enabled": true
                  },
                  {
                    "category": "Deadlocks",
                    "enabled": true
                  }
                ],
                "metrics": [
                  {
                    "category": "Basic",
                    "enabled": true
                  },
                  {
                    "category": "InstanceAndAppAdvanced",
                    "enabled": true
                  },
                  {
                    "category": "WorkloadManagement",
                    "enabled": true
                  }
                ]
              }
            }
          ]
        },
        {
          "comments": "Azure SQL Database allow Azure services and resources",
          "type": "firewallrules",
          "apiVersion": "2020-02-02-preview",
          "name": "AllowAllWindowsAzureIps",
          "location": "[parameters('location')]",
          "dependsOn": [
            "[resourceId('Microsoft.Sql/servers', variables('sqlServerName'))]"
          ],
          "properties": {
            "endIpAddress": "0.0.0.0",
            "startIpAddress": "0.0.0.0"
          }
        }
      ]
    },
    {
      "comments": "Azure Key Vault resource with access policy (read secrets) for Azure App Service",
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2019-09-01",
      "name": "[variables('keyVaultName')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tagValues')]",
      "properties": {
        "enabledForDeployment": true,
        "enabledForTemplateDeployment": true,
        "enabledForDiskEncryption": true,
        "tenantId": "[subscription().tenantId]",
        "sku": {
          "name": "[parameters('keyVault').skuName]",
          "family": "[parameters('keyVault').skuFamily]"
        },
        "accessPolicies": [
          {
            "tenantId": "[subscription().tenantId]",
            "objectId": "[reference(resourceId('Microsoft.Web/sites', variables('appServiceAppName')), '2019-08-01', 'full').identity.principalId]",
            "permissions": {
              "secrets": ["Get"]
            }
          }
        ]
      },
      "resources": [
        {
          "comments": "Azure Key Vault diagnostic settings configuration",
          "type": "providers/diagnosticSettings",
          "apiVersion": "2017-05-01-preview",
          "name": "[concat('Microsoft.Insights/default', ' ', variables('logAnalyticsName'))]",
          "dependsOn": [
            "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]"
          ],
          "properties": {
            "workspaceId": "[resourceId(parameters('managementSubscriptionId'),'mgmt-rg','Microsoft.OperationalInsights/workspaces', variables('logAnalyticsName'))]",
            "logs": [
              {
                "category": "AuditEvent",
                "enabled": true
              }
            ],
            "metrics": [
              {
                "category": "AllMetrics",
                "enabled": true
              }
            ]
          }
        }
      ]
    },
    {
      "comments": "Azure Key Vault secret, Azure SQL Database connection string",
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2019-09-01",
      "name": "[concat(variables('keyVaultName'), '/sqlConnectionString')]",
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]",
        "[resourceId('Microsoft.Sql/servers', variables('sqlServerName'))]"
      ],
      "properties": {
        "value": "[concat('Data Source=tcp:', reference(resourceId('Microsoft.Sql/servers',variables('sqlServerName'))).fullyQualifiedDomainName, ',1433;Initial Catalog=', variables('sqlDatabaseName'), ';User Id=', parameters('sqlAdminUserName'), '@', variables('sqlServerName'), ';Password=', parameters('sqlAdminPassword'), ';')]"
      }
    },
    {
      "comments": "Azure Key Vault secret, Azure SQL Server admin user name",
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2019-09-01",
      "name": "[concat(variables('keyVaultName'), '/sqlAdminUserName')]",
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]",
        "[resourceId('Microsoft.Sql/servers', variables('sqlServerName'))]"
      ],
      "properties": {
        "value": "[parameters('sqlAdminUserName')]"
      }
    },
    {
      "comments": "Azure Key Vault secret, Azure SQL Server admin password",
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2019-09-01",
      "name": "[concat(variables('keyVaultName'), '/sqlAdminPassword')]",
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]",
        "[resourceId('Microsoft.Sql/servers', variables('sqlServerName'))]"
      ],
      "properties": {
        "value": "[parameters('sqlAdminPassword')]"
      }
    },
    {
      "comments": "Azure App Service plan resource",
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2020-06-01",
      "name": "[variables('appServicePlanName')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tagValues')]",
      "sku": {
        "name": "[parameters('appService').skuName]",
        "capacity": "[parameters('appService').skuCapacity]"
      },
      "properties": {
        "name": "[variables('appServicePlanName')]"
      },
      "resources": [
        {
          "comments": "Azure App Service plan diagnostic settings configuration",
          "type": "providers/diagnosticSettings",
          "apiVersion": "2017-05-01-preview",
          "name": "[concat('Microsoft.Insights/default', ' ', variables('logAnalyticsName'))]",
          "dependsOn": [
            "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]"
          ],
          "properties": {
            "workspaceId": "[resourceId(parameters('managementSubscriptionId'),'mgmt-rg','Microsoft.OperationalInsights/workspaces', variables('logAnalyticsName'))]",
            "metrics": [
              {
                "category": "AllMetrics",
                "enabled": true
              }
            ]
          }
        }
      ]
    },
    {
      "comments": "Azure App Service resource",
      "type": "Microsoft.Web/sites",
      "apiVersion": "2020-06-01",
      "name": "[variables('appServiceAppName')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tagValues')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]"
      ],
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "name": "[variables('appServiceAppName')]",
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]"
      },
      "resources": [
        {
          "comments": "Azure App Service, Azure SQL Server connection string configuration",
          "type": "config",
          "apiVersion": "2020-06-01",
          "name": "connectionstrings",
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites', variables('appServiceAppName'))]"
          ],
          "properties": {
            "DefaultConnection": {
              "value": "[concat('@Microsoft.KeyVault(SecretUri=', reference(resourceId('Microsoft.KeyVault/vaults/secrets', variables('keyVaultName'), 'sqlConnectionString')).secretUriWithVersion, ')')]",
              "type": "SQLServer"
            }
          }
        },
        {
          "comments": "Azure App Service diagnostic settings configuration",
          "type": "providers/diagnosticSettings",
          "apiVersion": "2017-05-01-preview",
          "name": "[concat('Microsoft.Insights/default', ' ', variables('logAnalyticsName'))]",
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites', variables('appServiceAppName'))]"
          ],
          "properties": {
            "workspaceId": "[resourceId(parameters('managementSubscriptionId'),'mgmt-rg','Microsoft.OperationalInsights/workspaces', variables('logAnalyticsName'))]",
            "logs": [
              {
                "category": "AppServiceAntivirusScanAuditLogs",
                "enabled": true
              },
              {
                "category": "AppServiceHTTPLogs",
                "enabled": true
              },
              {
                "category": "AppServiceConsoleLogs",
                "enabled": true
              },
              {
                "category": "AppServiceAppLogs",
                "enabled": true
              },
              {
                "category": "AppServiceFileAuditLogs",
                "enabled": true
              },
              {
                "category": "AppServiceAuditLogs",
                "enabled": true
              },
              {
                "category": "AppServiceIPSecAuditLogs",
                "enabled": true
              },
              {
                "category": "AppServicePlatformLogs",
                "enabled": true
              }
            ],
            "metrics": [
              {
                "category": "AllMetrics",
                "enabled": true
              }
            ]
          }
        },
        {
          "comments": "Azure App Service staging deployment slot",
          "type": "slots",
          "apiVersion": "2020-06-01",
          "name": "staging",
          "location": "[parameters('location')]",
          "tags": "[parameters('tagValues')]",
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites', variables('appServiceAppName'))]"
          ],
          "properties": {},
          "resources": [
            {
              "comments": "Azure App Service staging deployment slot, Azure SQL Server connection string configuration",
              "type": "config",
              "apiVersion": "2020-06-01",
              "name": "connectionstrings",
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites/slots', variables('appServiceAppName'), 'staging')]"
              ],
              "properties": {
                "DefaultConnection": {
                  "value": "[concat('@Microsoft.KeyVault(SecretUri=', reference(resourceId('Microsoft.KeyVault/vaults/secrets', variables('keyVaultName'), 'sqlConnectionString')).secretUriWithVersion, ')')]",
                  "type": "SQLServer"
                }
              }
            },
            {
              "comments": "Azure App Service staging deployment slot diagnostic settings configuration",
              "type": "providers/diagnosticSettings",
              "apiVersion": "2017-05-01-preview",
              "name": "[concat('Microsoft.Insights/default', ' ', variables('logAnalyticsName'))]",
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites/slots', variables('appServiceAppName'), 'staging')]"
              ],
              "properties": {
                "workspaceId": "[resourceId(parameters('managementSubscriptionId'),'mgmt-rg','Microsoft.OperationalInsights/workspaces', variables('logAnalyticsName'))]",
                "logs": [
                  {
                    "category": "AppServiceAntivirusScanAuditLogs",
                    "enabled": true
                  },
                  {
                    "category": "AppServiceHTTPLogs",
                    "enabled": true
                  },
                  {
                    "category": "AppServiceConsoleLogs",
                    "enabled": true
                  },
                  {
                    "category": "AppServiceAppLogs",
                    "enabled": true
                  },
                  {
                    "category": "AppServiceFileAuditLogs",
                    "enabled": true
                  },
                  {
                    "category": "AppServiceAuditLogs",
                    "enabled": true
                  },
                  {
                    "category": "AppServiceIPSecAuditLogs",
                    "enabled": true
                  },
                  {
                    "category": "AppServicePlatformLogs",
                    "enabled": true
                  }
                ],
                "metrics": [
                  {
                    "category": "AllMetrics",
                    "enabled": true
                  }
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "comments": "Azure App Service CPU autoscale configuration",
      "type": "Microsoft.Insights/autoscalesettings",
      "apiVersion": "2015-04-01",
      "name": "[concat(variables('appServicePlanName'), '-', resourceGroup().name)]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]"
      ],
      "properties": {
        "profiles": [
          {
            "name": "Default",
            "capacity": {
              "minimum": "[parameters('appService').autoScaleMin]",
              "maximum": "[parameters('appService').autoscaleMax]",
              "default": "[parameters('appService').autoscaleDefault]"
            },
            "rules": [
              {
                "metricTrigger": {
                  "metricName": "CpuPercentage",
                  "metricResourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', variables('appServicePlanName'))]",
                  "timeGrain": "PT1M",
                  "statistic": "Average",
                  "timeWindow": "PT10M",
                  "timeAggregation": "Average",
                  "operator": "GreaterThan",
                  "threshold": "[parameters('appService').autoScaleCpuMax]"
                },
                "scaleAction": {
                  "direction": "Increase",
                  "type": "ChangeCount",
                  "value": 1,
                  "cooldown": "PT10M"
                }
              },
              {
                "metricTrigger": {
                  "metricName": "CpuPercentage",
                  "metricResourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', variables('appServicePlanName'))]",
                  "timeGrain": "PT1M",
                  "statistic": "Average",
                  "timeWindow": "PT1H",
                  "timeAggregation": "Average",
                  "operator": "LessThan",
                  "threshold": "[parameters('appService').autoScaleCpuMin]"
                },
                "scaleAction": {
                  "direction": "Decrease",
                  "type": "ChangeCount",
                  "value": 1,
                  "cooldown": "PT1H"
                }
              }
            ]
          }
        ],
        "enabled": true,
        "name": "[concat(variables('appServicePlanName'), '-', resourceGroup().name)]",
        "targetResourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', variables('appServicePlanName'))]"
      }
    },
    {
      "comments": "Action group, alert",
      "type": "microsoft.insights/actionGroups",
      "apiVersion": "2019-06-01",
      "name": "alert",
      "location": "global",
      "properties": {
        "groupShortName": "alert",
        "enabled": true,
        "armRoleReceivers": []
      }
    },
    {
      "comments": "Alert on Http5xx errors",
      "type": "microsoft.insights/metricAlerts",
      "apiVersion": "2018-03-01",
      "name": "[concat('ServerErrors ', variables('appServiceAppName'))]",
      "location": "global",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('appServiceAppName'))]",
        "[resourceId('microsoft.insights/actionGroups', 'alert')]"
      ],
      "properties": {
        "description": "[concat(variables('appServiceAppName'), ' has some server errors, status code 5xx.')]",
        "severity": 3,
        "enabled": true,
        "scopes": [
          "[resourceId('Microsoft.Web/sites', variables('appServiceAppName'))]"
        ],
        "evaluationFrequency": "PT1M",
        "windowSize": "PT5M",
        "criteria": {
          "allOf": [
            {
              "threshold": 0,
              "name": "[concat('ServerErrors ', variables('appServiceAppName'))]",
              "metricNamespace": "Microsoft.Web/sites",
              "metricName": "Http5xx",
              "operator": "GreaterThan",
              "timeAggregation": "Total",
              "criterionType": "StaticThresholdCriterion"
            }
          ],
          "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
        },
        "autoMitigate": true,
        "targetResourceType": "Microsoft.Web/sites",
        "actions": [
          {
            "actionGroupId": "[resourceId('microsoft.insights/actionGroups', 'alert')]"
          }
        ]
      }
    },
    {
      "comments": "Alert on Http403 errors",
      "type": "microsoft.insights/metricAlerts",
      "apiVersion": "2018-03-01",
      "name": "[concat('ForbiddenRequests ', variables('appServiceAppName'))]",
      "location": "global",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('appServiceAppName'))]",
        "[resourceId('microsoft.insights/actionGroups', 'alert')]"
      ],
      "properties": {
        "description": "[concat(variables('appServiceAppName'), ' has some requests that are forbidden, status code 403.')]",
        "severity": 3,
        "enabled": true,
        "scopes": [
          "[resourceId('Microsoft.Web/sites', variables('appServiceAppName'))]"
        ],
        "evaluationFrequency": "PT1M",
        "windowSize": "PT5M",
        "criteria": {
          "allOf": [
            {
              "threshold": 0,
              "name": "[concat('ForbiddenRequests ', variables('appServiceAppName'))]",
              "metricNamespace": "Microsoft.Web/sites",
              "metricName": "Http403",
              "operator": "GreaterThan",
              "timeAggregation": "Total",
              "criterionType": "StaticThresholdCriterion"
            }
          ],
          "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
        },
        "autoMitigate": true,
        "targetResourceType": "Microsoft.Web/sites",
        "actions": [
          {
            "actionGroupId": "[resourceId('microsoft.insights/actionGroups', 'alert')]"
          }
        ]
      }
    },
    {
      "comments": "Alert on high CPU",
      "type": "microsoft.insights/metricAlerts",
      "apiVersion": "2018-03-01",
      "name": "[concat('CPUHigh ', variables('appServicePlanName'))]",
      "location": "global",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
        "[resourceId('microsoft.insights/actionGroups', 'alert')]"
      ],
      "properties": {
        "description": "[concat('The average CPU is high across all the instances of ', variables('appServicePlanName'))]",
        "severity": 3,
        "enabled": true,
        "scopes": [
          "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]"
        ],
        "evaluationFrequency": "PT1M",
        "windowSize": "PT5M",
        "criteria": {
          "allOf": [
            {
              "threshold": 90,
              "name": "[concat('CPUHigh ', variables('appServicePlanName'))]",
              "metricNamespace": "Microsoft.Web/serverfarms",
              "metricName": "CpuPercentage",
              "operator": "GreaterThan",
              "timeAggregation": "Average",
              "criterionType": "StaticThresholdCriterion"
            }
          ],
          "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
        },
        "autoMitigate": true,
        "targetResourceType": "Microsoft.Web/serverfarms",
        "actions": [
          {
            "actionGroupId": "[resourceId('microsoft.insights/actionGroups', 'alert')]"
          }
        ]
      }
    },
    {
      "comments": "Alert on high HttpQueueLength",
      "type": "microsoft.insights/metricAlerts",
      "apiVersion": "2018-03-01",
      "name": "[concat('LongHttpQueue ', variables('appServicePlanName'))]",
      "location": "global",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
        "[resourceId('microsoft.insights/actionGroups', 'alert')]"
      ],
      "properties": {
        "description": "[concat('The HTTP queue for the instances of ', variables('appServicePlanName'), ' has a large number of pending requests.')]",
        "severity": 3,
        "enabled": true,
        "scopes": [
          "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]"
        ],
        "evaluationFrequency": "PT1M",
        "windowSize": "PT5M",
        "criteria": {
          "allOf": [
            {
              "threshold": 100.0,
              "name": "[concat('CPUHigh ', variables('appServicePlanName'))]",
              "metricNamespace": "Microsoft.Web/serverfarms",
              "metricName": "HttpQueueLength",
              "operator": "GreaterThan",
              "timeAggregation": "Average",
              "criterionType": "StaticThresholdCriterion"
            }
          ],
          "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
        },
        "autoMitigate": true,
        "targetResourceType": "Microsoft.Web/serverfarms",
        "actions": [
          {
            "actionGroupId": "[resourceId('microsoft.insights/actionGroups', 'alert')]"
          }
        ]
      }
    }
  ],
  "outputs": {}
}
